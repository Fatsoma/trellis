---
- name: Generate private keys
  shell: openssl genrsa 4096 > {{ letsencrypt_keys_dir }}/{{ item.1.canonical }}.key
  args:
    creates: "{{ letsencrypt_keys_dir }}/{{ item.1.canonical }}.key"
  when: site_host_uses_letsencrypt
  loop: "{{ wordpress_sites | dict2items | subelements('value.site_hosts') }}"
  loop_control:
    label: "{{ item.0.key }} => {{ item.1.canonical }}"

- name: Ensure correct permissions on private keys
  file:
    path: "{{ letsencrypt_keys_dir }}/{{ item.1.canonical }}.key"
    mode: 0600
  when: site_host_uses_letsencrypt
  loop: "{{ wordpress_sites | dict2items | subelements('value.site_hosts') }}"
  loop_control:
    label: "{{ item.0.key }} => {{ item.1.canonical }}"

- name: Generate Lets Encrypt certificate IDs
  shell: |
    set -eo pipefail
    echo "{{ [[item.1.canonical] | union(item.1.redirects | default([])) | join(' '), letsencrypt_ca, acme_tiny_commit] | join('\n') }}" |
    cat {{ letsencrypt_account_key }} {{ letsencrypt_keys_dir }}/{{ item.1.canonical }}.key - |
    md5sum | cut -c -7
  args:
    executable: /bin/bash
  register: generate_cert_ids
  changed_when: false
  when: site_host_uses_letsencrypt
  loop: "{{ wordpress_sites | dict2items | subelements('value.site_hosts') }}"
  loop_control:
    label: "{{ item.0.key }} => {'canonical': {{ item.1.canonical }}, 'redirects': {{ item.1.redirects | default([]) }}}"
  tags: [wordpress, wordpress-setup, nginx-includes, nginx-sites]

- name: Generate CSRs
  shell: "openssl req -new -sha256 -key '{{ letsencrypt_keys_dir }}/{{ item.1.canonical }}.key' -subj '/' -reqexts SAN -config <(cat /etc/ssl/openssl.cnf <(printf '[SAN]\nsubjectAltName=DNS:{{ [item.1.canonical] | union(item.1.redirects | default([])) | join(',DNS:') }}')) > {{ acme_tiny_data_directory }}/csrs/{{ item.1.canonical }}-{{ letsencrypt_cert_ids[item.1.canonical] }}.csr"
  args:
    executable: /bin/bash
    creates: "{{ acme_tiny_data_directory }}/csrs/{{ item.1.canonical }}-{{ letsencrypt_cert_ids[item.1.canonical] }}.csr"
  when: site_host_uses_letsencrypt
  loop: "{{ wordpress_sites | dict2items | subelements('value.site_hosts') }}"
  loop_control:
    label: "{{ item.0.key }} => {'canonical': {{ item.1.canonical }}, 'redirects': {{ item.1.redirects | default([]) }}}"

- name: Generate certificate renewal script
  template:
    src: renew-certs.py
    dest: "{{ acme_tiny_data_directory }}/renew-certs.py"
    mode: 0700

- name: Generate the certificates
  command: ./renew-certs.py
  args:
    chdir: "{{ acme_tiny_data_directory }}"
  register: generate_certs
  changed_when: generate_certs.stdout is defined and 'Created' in generate_certs.stdout
  notify: reload nginx
